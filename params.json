{"name":"React-markdown-area","tagline":"An enhanced textarea with markdown support and live preview","body":"# React-Markdown-Area\r\n\r\nAn enhanced textarea control built with and for [React](http://facebook.github.io/react/index.html). Initially built for use in tuts-wanted.\r\n\r\n## Demo & Examples\r\n\r\nLive demo: [styleguide](./examples)\r\n\r\nTo build the examples locally, run:\r\n\r\n```\r\nnpm install\r\nnpm start\r\n```\r\n\r\nThen open [`localhost:8000`](http://localhost:8000) in a browser.\r\n\r\n## Installation\r\n\r\nThe easiest way to use React--Markdown-Area is to install it from NPM and include it in your own React build process (using [Browserify](http://browserify.org), etc).\r\n\r\n```\r\nnpm install react-markdown-area --save\r\n```\r\n\r\nYou can also use the standalone build by including `dist/markedarea.js` in your page. The standalone build contains all the dependencies, so for less bloat its better to use NPM.\r\n\r\n## Usage\r\n\r\nReact-Markdown-Area generates two buttons for switching between live and edit mode, a textarea, and a preview pane.\r\nThe bundled package comes with a minimal and namespaced amount of CSS.  You can change the classnames of each element in use by modifying the `classNames` prop.\r\n\r\n```\r\nvar MarkedArea = require('react-markdown-area');\r\n// Or import {MarkedArea} from 'react-markdown-area';\r\n\r\n<MarkedArea label=\"Enter your markdown text\" placeholder=\"Type in here\"/>\r\n\r\n```\r\n\r\n### Props\r\n\r\n\tProperty\t\t\t|\tType\t\t|\tDescription\r\n:-----------------------|:--------------|:--------------------------------\r\n\tlabel       \t\t|\tstring\t\t|\ttext displayed in the `label` tag, default is an empty string.\r\n\tid      \t\t\t|\tstring\t\t|\tunique DOM element ID, default is `mmc-marked-area`\r\n\tonChange     \t\t|\tstring\t\t|\tfunction called on change, default is an internal function that updates state.\r\n\tdefaultValue   \t\t|\tstring\t\t|\tstarting value, works similar to defaultValue for textarea\r\n\tvalue   \t\t    |\tstring\t\t|\tvalue, works similar to any other form element value. default is `state.value`\r\n\tclassNames \t\t\t|\tobject\t\t|\tclassnames used for each element (see below)\r\n\t{...props}          |   object      |   All props are passed into the `textarea` and `preview` to give you more control.\r\n\r\n### props.classNames\r\n\r\n\tClassNames\t\t\t|\tDefault\t\t                |\tDescription\r\n:-----------------------|:------------------------------|:-----------------\r\n\troot       \t\t    |   marked-area                 |\tThe top-level wrapping element.\r\n\theader      \t\t|   marked-area-header          |\tThe element that wraps the controls\r\n\tactiveButton     \t|   marked-area-button.active   |\tClass used to indicate the active tab\r\n\tdefaultButton       |   marked-area-button          |   Class used to indicate the inactive tab\r\n\thelpLink            |   marked-area-help-link       |   Class used for the help link\r\n    textContainer\t \t|   marked-area-text-container  |\tElement that wraps the textarea or the preview.\r\n\r\n## License\r\n\r\nBSD Licensed. Copyright (c) Matt McFarland 2015.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}